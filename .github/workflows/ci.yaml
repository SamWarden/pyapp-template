# This workflow will install Python dependencies, run tests and linters
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  workflow_call:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.2"
          enable-cache: true
      - name: Install project dependencies
        run: uv sync --all-groups --all-extras
      - name: Cache venv
        uses: actions/cache@v4
        with:
          path: |
            ./.venv
            ~/.local/share/uv
          key: venv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore cached venv
        uses: actions/cache@v4
        with:
          path: |
            ./.venv
            ~/.local/share/uv
          key: venv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
      - name: Lint with pre-commit
        run: ./.venv/bin/pre-commit run --all-files
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Restore cached venv
        uses: actions/cache@v4
        with:
          path: |
            ./.venv
            ~/.local/share/uv
          key: venv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
      - name: Run tests with pytest
        run: ./.venv/bin/pytest
#  build:
#    needs:
#      - lint
#      - test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Log in to Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ secrets.REGISTRY_HOST }}
#          username: ${{ secrets.REGISTRY_USERNAME }}
#          password: ${{ secrets.REGISTRY_PASSWORD }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build and push
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: true
#          tags: |
#            ${{ secrets.REGISTRY_HOST }}/${{ secrets.IMAGE_NAME }}:latest
#            ${{ secrets.REGISTRY_HOST }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
